// Instruction: https://support.mozilla.org/en-GB/kb/customizing-firefox-using-autoconfig
// This config is based on Debian Iceweasel 88.0 (Windows build)

// Chameleon Checklist
// https://sereneblue.github.io/chameleon
// defaultPref("browser.cache.disk.enable", false); // recommend if you're using SSD!
// defaultPref("dom.storage.enabled", false); // disable DOM storage will break most sites
// defaultPref("privacy.trackingprotection.socialtracking.enabled", true); // enable SNS tracker blocking list (This will contact to Mozilla TPL)
defaultPref("beacon.enabled", false); // in Chrome, they called "devices uses" (formerly "user presence")
defaultPref("browser.cache.memory.enable", true); // recommend if you want to caching browser contents to RAM rather than harddisk and/or SSD!
defaultPref("browser.cache.offline.enable", false); // nothing cached for offline!
defaultPref("browser.display.use_document_fonts", 0); // don't use remote fonts or any fonts that override by remote CSS, this break emoji and symbols!
defaultPref("browser.safebrowsing.downloads.enabled", false);                           // disable main prefs will break safebrowsing functionality
defaultPref("browser.safebrowsing.downloads.remote.block_potentially_unwanted", false); // and you may lost some protections against harmful threats
defaultPref("browser.safebrowsing.downloads.remote.block_uncommon", false);             // for first time use, such as malware, phishing, scam, etc.
defaultPref("browser.safebrowsing.downloads.remote.enabled", false);                    // you might try to modify other prefs to download safebrowsing
defaultPref("browser.safebrowsing.malware.enabled", false);                             // blocklist from mozilla instead of google.
defaultPref("browser.safebrowsing.phishing.enabled", false);                            // ~ end of safebrowsing group ~
defaultPref("browser.search.suggest.enabled", false); // turn off search zuckestions (prevent pinging to search engine servers too early!)
defaultPref("browser.search.update", false); // turn off search engine update
defaultPref("browser.sessionstore.max_tabs_undo", 0); // you cannot perform `Undo close tab`, however, restore tabs after close program still possible.
defaultPref("browser.sessionstore.privacy_level", 2);
defaultPref("browser.tabs.crashReporting.sendReport", false); // don't send tab crash report!
defaultPref("datareporting.healthreport.uploadEnabled", false); // don't send browser health report (BHR)
defaultPref("datareporting.policy.dataSubmissionEnabled", false); // disable data submission reporting
defaultPref("device.sensors.enabled", false); // we're on the pc, even somebody use laptop, why it's need to let any sites access sensor?
defaultPref("dom.battery.enabled", false); // useless for static pc, even laptop also, why website wants to know your battery time?
defaultPref("dom.enable_resource_timing", false);
defaultPref("dom.event.clipboardevents.enabled", false);
defaultPref("dom.event.contextmenu.enabled", false);
defaultPref("extensions.getAddons.cache.enabled", false); // do not cache addons zuckestions in `about:addons` page
defaultPref("extensions.pocket.enabled", false); // any snippets related features that load from the first time or everytime of open browsers aren't welcome!
defaultPref("extensions.update.enabled", false); // unless you've periodically check by yourself, the advantage is prevent system addons auto update, too!
defaultPref("geo.enabled", false); // no actual locations resolving!
defaultPref("geo.provider.network.url", ""); // blank is better than letting mozilla retrieve network locations
defaultPref("geo.wifi.uri", "");   // blank is better than use mozilla locations, no location providers is better than use alternative services. (they use `goolag` by default)
defaultPref("media.eme.enabled", false); // encrypted media extension (possibly break protected contents, e.g. widevine-based)
defaultPref("network.dns.disablePrefetch", true); // disable DNS prefetch!
defaultPref("network.http.speculative-parallel-limit", 0); // allow parallel downloading?
defaultPref("network.IDN_show_punycode", true); // always convert unicode domain name to `xn--` format! (help for easier to notice against phishing sites)
defaultPref("network.trr.mode", 0); // Chameleon said `5` but I may recommend `0` (should be off without choices!)
defaultPref("pdfjs.disabled", true); // don't enable PDF(.js) viewer in browser
defaultPref("places.history.enabled", false); // disable saving browsing history! (re-enable save history in settings to allow history saving, this will intent to apply only for first run!)
defaultPref("plugins.click_to_play", true); // set click-to-play plugins from the beginning, sadly, doesn't work for common native audio/videos in browser.
defaultPref("privacy.clearOnShutdown.offlineApps", true); // any apps that save offline data will be purged out, this may break some extensions!
defaultPref("security.mixed_content.block_active_content", true); // while on HTTPS sites, block insecure active contents
defaultPref("security.mixed_content.block_display_content", true); // while on HTTPS sites, block insecure displayable contents e.g. images
defaultPref("security.ssl.disable_session_identifiers", true); // disable SSL session identifier
defaultPref("security.ssl.enable_false_start", false); // disable SSL false start
defaultPref("security.tls.enable_0rtt_data", false); // disable TLS zero round trip time
defaultPref("toolkit.telemetry.enabled", false); // disable telemetry (set as defaultPref for OOB)
defaultPref("toolkit.telemetry.server", ""); // remove telemetry server name
defaultPref("toolkit.telemetry.unified", false); // disable telemetry unification (set as defaultPref for OOB)
defaultPref("webgl.disabled", true); // disable WebGL will break any sites that use graphics, e.g. demoscene, web games (any `.io` games for example), etc.

// prefs that appearing in policy preset / registry (they will deprecated soon , so i put older prefs as defaultPref instead!)
// Lots of preferences are only supported on Firefox 81 and newer.
// See: https://github.com/mozilla/policy-templates/blob/master/README.md#preferences
// defaultPref("", );
// defaultPref("dom.xmldocument.async.enabled", false);  // do not load xml documents seamlessly! (probably break some sites, e.g. `Facebook` that fetch news feed update, MESSengers, etc.)
// defaultPref("dom.xmldocument.load.enabled", false); // do not load xml documents (possibly break)
// defaultPref("security.default_personal_cert", ""); // edit manually to add default personal cert
// defaultPref("widget.content.gtk-theme-override", false);
defaultPref("accessibility.force_disabled", 1); // force disable accessibility by default OOB
defaultPref("app.update.auto", false); // do not allow auto self update (If you have maintenance service installed or didn't delete their exeuctables!)
defaultPref("browser.bookmarks.autoExportHTML", false); // don't backup bookmarks to HTML file automatically.
defaultPref("browser.bookmarks.restore_default_bookmarks", false); // do not restore default (bloated) bookmarks
defaultPref("browser.fixup.dns_first_for_single_words", false); // do not send any DNS query for first word!
defaultPref("browser.newtabpage.activity-stream.default.sites", ""); // do not use either default and/or custom stream snippets endpoint!
defaultPref("browser.places.importBookmarksHTML", false); // do not import bookmark on startup everytime
defaultPref("browser.slowStartup.notificationDisabled", true); // This will prevent showing hint bar if your browser takes long time to starting up.
defaultPref("browser.tabs.warnOnClose", false); // Do not warn close all tabs if you close its window
defaultPref("browser.taskbar.previews.enable", false); // by default, tab or window will never have thumbnail preview in taskbar (May not work in Windows 7+)
defaultPref("browser.urlbar.suggest.bookmark", false); // don't zuckest bookmarks while typing onto address bar
defaultPref("browser.urlbar.suggest.history", false); // don't zuckest history while typing onto address bar
defaultPref("browser.urlbar.suggest.openpage", false); // don't zuckest tabs that currently opening while typing onto address bar
defaultPref("datareporting.policy.dataSubmissionPolicyBypassNotification", false); // do not open 'privacy policy' page (should disable telemetry along with)
defaultPref("dom.allow_scripts_to_close_windows", false); // do not allow web functions / scripts close your tab/window
defaultPref("dom.disable_window_flip", false); // do not allow web functions / scripts to steal window focus (alt+tab)
defaultPref("dom.disable_window_move_resize", false); // do not allow web functions / scripts move and/or resize browser window
defaultPref("extensions.blocklist.enabled", true); // allow downloading extensions blocklist (this contact to Mozilla but it's good to have some protection against harmful add-ons)
defaultPref("extensions.getAddons.showPane", false); // do not show add-ons recommendations in left pane link.
defaultPref("extensions.htmlaboutaddons.recommendations.enabled", false); // do not load add-ons recommendations page inside `about:addons`
defaultPref("intl.accept_languages", "en-US, en"); // most of prefs mod recommend to use `en-US`, but I mostly use `en-GB`, following common default will reduce fingerprint diffs
defaultPref("media.gmp-widevinecdm.enabled", false); // do not enable WideVine by default!
defaultPref("media.peerconnection.enabled", false); // main switch of disabling WebRTC (safe if you're not intent to use conference features, such as Dislikecord, Fakebook MESSenger, MicroSuck Teams, Zxxm)
defaultPref("media.peerconnection.ice.obfuscate_host_addresses.blocklist", ""); // no use since main switch of WebRTC is disabled!
defaultPref("media.peerconnection.ice.obfuscate_host_addresses.whitelist", ""); // but just in case if burntfox still blacklist/whitelist specific domains.
defaultPref("network.dns.disableIPv6", true); // do not allow IPv6
defaultPref("print.save_print_settings", false); // do not save webpage print settings accross print job
defaultPref("security.osclientcerts.autoload", false); // do not load certificates from OS automatically
defaultPref("security.ssl.errorReporting.enabled", false); // do not report SSL error to Mozilla
defaultPref("security.tls.hello_downgrade_check", false); // do not check for downgrade TLS
defaultPref("ui.key.menuAccessKeyFocuses", true); // allow alt key to show menu bar (common default behavior)

// Customised default
// defaultPref("", );
defaultPref("app.normandy.api_url", ""); // remove normandy URL endpoint
defaultPref("app.normandy.user_id", ""); // keep normandy ID to blank, cause regenerate random ID
defaultPref("breakpad.reportURL", ""); // remove crash status upload endpoint!
defaultPref("browser.aboutHomeSnippets.updateUrl", ""); // remove URL endpoint for updating snippets!
defaultPref("browser.chrome.site_icons", false); // disable favicon (it can be trackable by big techs)
defaultPref("browser.contentblocking.cfr-milestone.enabled", false); // do not enable content blocking milestones!
defaultPref("browser.contentblocking.report.vpn_platforms", ""); // remove vpn platform target!
defaultPref("browser.contentblocking.report.vpn_regions", "");   // remove vpn supported regions!
defaultPref("browser.contentblocking.report.vpn_sub_id", "");    // remove vpn subscriptions ID!
defaultPref("browser.ctrlTab.recentlyUsedOrder", false); // prefer to cycle tabs from left-right, not recent usage order!
defaultPref("browser.newtabpage.activity-stream.asrouter.providers.cfr", "{\"id\":\"cfr\",\"enabled\":false,\"type\":\"local-settings\",\"bucket\":\"unsupported\",\"updateCycleInMs\":2147483647}");
defaultPref("browser.newtabpage.activity-stream.asrouter.providers.cfr-fxa", "{\"id\":\"cfr-fxa\",\"enabled\":false,\"type\":\"local-settings\",\"bucket\":\"unsupported\",\"updateCycleInMs\":2147483647}");
defaultPref("browser.newtabpage.activity-stream.asrouter.providers.message-groups", "{\"id\":\"message-groups\",\"enabled\":false,\"type\":\"local-settings\",\"bucket\":\"unsupported\",\"updateCycleInMs\":2147483647}");
defaultPref("browser.newtabpage.activity-stream.asrouter.providers.messaging-experiments", "{\"id\":\"messaging-experiments\",\"enabled\":false,\"type\":\"local-experiments\",\"messageGroups\":[],\"updateCycleInMs\":2147483647}");
defaultPref("browser.newtabpage.activity-stream.asrouter.providers.onboarding", "{\"id\":\"onboarding\",\"type\":\"local\",\"localProvider\":\"OnboardingMessageProvider\",\"enabled\":false,\"exclude\":[]}");
defaultPref("browser.newtabpage.activity-stream.asrouter.providers.snippets", "{\"id\":\"snippets\",\"enabled\":false,\"type\":\"local\",\"url\":\"data://\",\"updateCycleInMs\":2147483647}");
defaultPref("browser.newtabpage.activity-stream.asrouter.providers.whats-new-panel", "{\"id\":\"whats-new-panel\",\"enabled\":false,\"type\":\"local-settings\",\"bucket\":\"whats-new-panel\",\"updateCycleInMs\":2147483647}");
defaultPref("browser.newtabpage.activity-stream.asrouter.useRemoteL10n", false); // do not retrieve remote language for snippets
defaultPref("browser.newtabpage.activity-stream.discoverystream.config", "{\"api_key_pref\":\"extensions.pocket.oAuthConsumerKey\",\"collapsible\":true,\"enabled\":false,\"show_spocs\":false,\"hardcoded_layout\":false,\"personalized\":false,\"layout_endpoint\":\"data://\"}");
defaultPref("browser.newtabpage.activity-stream.discoverystream.region-spocs-config", ""); // do not use any regions for Pocket SPOCS (stand for "SPOnsored Content Suggestions"), all of regions are blocked below as much as possible!
defaultPref("browser.newtabpage.activity-stream.discoverystream.region-stories-block", "AD,AE,AF,AG,AI,AL,AM,AN,AO,AQ,AR,AS,AT,AU,AW,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BM,BN,BO,BR,BS,BT,BU,BV,BW,BY,BZ,CA,CC,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CS,CU,CV,CX,CY,CZ,DD,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH,ER,ES,ET,FI,FJ,FK,FM,FO,FR,FX,GA,GB,GD,GE,GF,GH,GI,GL,GM,GN,GP,GQ,GR,GS,GT,GU,GW,GY,HK,HM,HN,HR,HT,HU,ID,IE,IL,IN,IO,IQ,IR,IS,IT,JM,JO,JP,KE,KG,KH,KI,KM,KN,KP,KR,KW,KY,KZ,LA,LB,LC,LI,LK,LR,LS,LT,LU,LV,LY,MA,MC,MD,MG,MH,ML,MM,MN,MO,MP,MQ,MR,MS,MT,MU,MV,MW,MX,MY,MZ,NA,NC,NE,NF,NG,NI,NL,NO,NP,NR,NT,NU,NZ,OM,PA,PE,PF,PG,PH,PK,PL,PM,PN,PR,PT,PW,PY,QA,RE,RO,RU,RW,SA,SB,SC,SD,SE,SG,SH,SI,SJ,SK,SL,SM,SN,SO,SR,ST,SU,SV,SY,SZ,TC,TD,TF,TG,TH,TJ,TK,TM,TN,TO,TP,TR,TT,TV,TW,TZ,UA,UG,UM,US,UY,UZ,VA,VC,VE,VG,VI,VN,VU,WF,WS,YD,YE,YT,YU,ZA,ZM,ZR,ZW,ZZ");
defaultPref("browser.newtabpage.activity-stream.discoverystream.region-stories-config", ""); // do not use any regions for retrive any news stories from Pocket!
defaultPref("browser.newtabpage.activity-stream.improvesearch.topSiteSearchShortcuts", false); // don't enable topsite search shortcut by default
defaultPref("browser.newtabpage.activity-stream.improvesearch.topSiteSearchShortcuts.havePinned", ""); // remove all pinned search
defaultPref("browser.newtabpage.activity-stream.improvesearch.topSiteSearchShortcuts.searchEngines", ""); // remove topsite improved search engine
defaultPref("browser.newtabpage.activity-stream.section.highlights.includeDownloads", false); // don't show highlight contents in NTP (based on downloaded files)
defaultPref("browser.newtabpage.activity-stream.section.highlights.includePocket", false); // do not include highlights from ~~Pocket~~ by default!
defaultPref("browser.newtabpage.activity-stream.section.highlights.includeVisited", false);   // this one based on visited sites, should put into lockPref instead?
defaultPref("browser.newtabpage.activity-stream.telemetry.structuredIngestion.endpoint", ""); // do not phone home about NTP stream experiences!
defaultPref("browser.newtabpage.pinned", ""); // remove all pinned sites by default
defaultPref("browser.pageActions.persistedActions", ""); // remove all prefered page actions by default
defaultPref("browser.pagethumbnails.capturing_disabled", true); // don't capture page screenshot for buiding thumbnail (used for pinned, topsite, etc.)
defaultPref("browser.region.network.url", ""); // clear network endpoit for resolving browser language!
defaultPref("browser.safebrowsing.downloads.remote.url", ""); // remove Goolag SafeBrowsing endpoint url to make sure this will not downloaded at all!
defaultPref("browser.search.hiddenOneOffs", "Amazon, Amazon.com, Bing, Google, Wikipedia, Wikipedia (en), eBay"); // remove all SE, except DDG (Google still set as default, if you choose DDG as default in browser config, it will gone!)
defaultPref("browser.search.searchEnginesURL", "https://mycroftproject.com/search-engines.html"); // use MycroftProject rather than AMO for finding search plugins!
defaultPref("browser.search.separatePrivateDefault.ui.enabled", true); // enable its UI settings of separate search engine for private tab/window
defaultPref("browser.search.update.interval", 2147483647); // taking up to 60+ years for next interval of fetching search engine updates
defaultPref("browser.shell.checkDefaultBrowser", false); // disable check default browser shell (prompt dialog, maybe...)
defaultPref("browser.startup.blankWindow", false); // disable blank/maximise window at startup
defaultPref("browser.tabs.drawInTitlebar", false); // always show title bar like Firefox 2 and any programs, please don't too be chrome!
defaultPref("browser.urlbar.merino.endpointURL", ""); // Remove QuickZuckest endpoint
defaultPref("browser.urlbar.quicksuggest.shouldShowOnboardingDialog", true); // force show onboarding prompt before showing (sponsored) quickzuckest
defaultPref("browser.urlbar.richSuggestions.tail", false); // disable tail rich zuckestions
defaultPref("browser.urlbar.suggest.quicksuggest", false); // disable quick zuckestions
defaultPref("browser.urlbar.trimURLs", false); // do not trim URLs in address bar
defaultPref("clipboard.autocopy", false); // prevent certain actions for auto copy some contents into clipboard!
defaultPref("devtools.debugger.force-local", true); // force debugger local mode only
defaultPref("devtools.debugger.remote-enabled", false); // disable remote debugger by default
defaultPref("devtools.webide.autoinstallADBHelper", false); // don't install WebIDE drivers for Android automatically
defaultPref("devtools.webide.enabled", false); // don't enable WebIDE
defaultPref("dom.gamepad.enabled", false); // do not detect gamepad by default
defaultPref("dom.security.https_only_mode", true); // enforce HTTPS only mode by default regardless of private window (`dom.security.https_only_mode_ever_enabled` will be automatically set to true)
defaultPref("dom.webaudio.enabled", false); // disable WebAudio (break Unity apps/games, however, Unity is owned by `Facebook/Metaverse`)
defaultPref("extensions.formautofill.creditCards.available", false); // Make saving credit cards feature unavailable.
defaultPref("extensions.formautofill.creditCards.enabled", false); // Saving credit cards feature shouldn't enable.
defaultPref("extensions.formautofill.supportedCountries", ""); // Remove supported autofill countries!
defaultPref("extensions.getAddons.search.browseURL", "https://addons.mozilla.org/%LOCALE%/firefox/search?q=%TERMS%"); // do not expose unnecessary informations while searching for addons!
defaultPref("extensions.ui.lastCategory", ""); // Reset last addons manager pane that previously focused (If you've previously open "Recommended" section while setting `extensions.getAddons.showPane` prefs to `false`, it will fail to hide!)
defaultPref("extensions.webextensions.restrictedDomains", ""); // https://github.com/gorhill/uBlock/wiki/Privileged-Pages
defaultPref("javascript.options.wasm", false); // disable Web-"ASS"-embly JS
defaultPref("media.gmp-manager.url", "");             // leave OpenH264 downloader URLs to blank
defaultPref("media.gmp-provider.enabled", false);     // do not enable GMP provider
defaultPref("media.gmp.trial-create.enabled", false); // do not enable GMP trial create
defaultPref("media.navigator.enabled", false);        // do not enable media navigator
defaultPref("media.navigator.video.enabled", false);  // do not enable media navigator for videos
defaultPref("media.video_stats.enabled", false);      // do not enable video stats!
defaultPref("media.webspeech.recognition.enable", );  // do not use voice recognition
defaultPref("media.webspeech.synth.enabled", false);  // do not synth webspeech
defaultPref("network.dns.disablePrefetchFromHTTPS", false); // No and never enable DNS prefetch for HTTPS!
defaultPref("network.http.windows-sso.enabled", false); // disable SingleSignOn sign-in (Windows)
defaultPref("network.security.esni.enabled", false); // switch back to true if you're using DoH and use endpoint server that support ESNI (ClientHello), currently, only CrapFlare is only the one who support that!
defaultPref("network.trr.confirmationNS", ""); // ping DoH confirmation to nowhere!
defaultPref("network.trr.resolvers", "[{\"name\": \"\[Local\] DNSCrypt Proxy\", \"url\": \"https://127.0.0.1:3000/dns-query\"}, {\"name\": \"\[Spy\] Goolag\", \"url\": \"https://dns.google/dns-query\"}, {\"name\": \"\[Spy\] Mozilla Crapflare\", \"url\": \"https://mozilla.cloudflare-dns.com/dns-query\"}, {\"name\": \"\[Spy\] Mozilla NextDNS\", \"url\": \"https://firefox.dns.nextdns.io/\"}, {\"name\": \"AdHole - Singapore\", \"url\": \"https://sg.adhole.org/dns-query\"}, {\"name\": \"AhaDNS Blitz\", \"url\": \"https://blitz.ahadns.com/\"}, {\"name\": \"BlahDNS - Singapore\", \"url\": \"https://doh-sg.blahdns.com/dns-query\"}, {\"name\": \"ControlD (Malware + Ads + Social)\", \"url\": \"https://freedns.controld.com/p3\"}, {\"name\": \"ControlD (Malware + Ads)\", \"url\": \"https://freedns.controld.com/p2\"}, {\"name\": \"ControlD (Malware)\", \"url\": \"https://freedns.controld.com/p1\"}, {\"name\": \"ControlD (MAS + Family)\", \"url\": \"https://freedns.controld.com/p4\"}, {\"name\": \"ControlD (Uncensored)\", \"url\": \"https://freedns.controld.com/uncensored\"}, {\"name\": \"ControlD\", \"url\": \"https://freedns.controld.com/p0\"}, {\"name\": \"Digitale Gesellschaft\", \"url\": \"https://dns.digitale-gesellschaft.ch/dns-query\"}, {\"name\": \"DNS for Family (No SafeSearch)\", \"url\": \"https://dns-doh-no-safe-search.dnsforfamily.com/dns-query\"}, {\"name\": \"DNSlify\", \"url\": \"https://doh.dnslify.com/dns-query\"}, {\"name\": \"DNSWarden Asia (Adult Filters)\", \"url\": \"https://doh.asia.dnswarden.com/adultfilter\"}, {\"name\": \"DNSWarden Asia (Filtered)\", \"url\": \"https://doh.asia.dnswarden.com/adblock\"}, {\"name\": \"DNSWarden Asia (Uncensored)\", \"url\": \"https://doh.asia.dnswarden.com/uncensored\"}, {\"name\": \"Foundation of Applied Privacy\", \"url\": \"https://doh.applied-privacy.net/query\"}, {\"name\": \"LibreDNS (Filtered)\", \"url\": \"https://doh.libredns.gr/ads\"}, {\"name\": \"LibreDNS\", \"url\": \"https://doh.libredns.gr/dns-query\"}, {\"name\": \"LinuxSec (AdGuard)\", \"url\": \"https://doh.linuxsec.org/adguard\"}, {\"name\": \"LinuxSec\", \"url\": \"https://doh.linuxsec.org/dns-query\"}, {\"name\": \"Mullvad (Filtered)\", \"url\": \"https://adblock.doh.mullvad.net/dns-query\"}, {\"name\": \"Mullvad\", \"url\": \"https://doh.mullvad.net/dns-query\"}, {\"name\": \"PowerDNS\", \"url\": \"https://doh.powerdns.org\"}, {\"name\": \"Quad9 Secure\", \"url\": \"https://dns9.quad9.net/dns-query\"}, {\"name\": \"RethinkDNS Basic\", \"url\": \"https://basic.rethinkdns.com/dns-query\"}, {\"name\": \"Tiarap - Japan\", \"url\": \"https://jp.tiar.app/dns-query\"}, {\"name\": \"Tiarap - Singapore \(Filtered\)\", \"url\": \"https://doh.tiar.app/dns-query\"}, {\"name\": \"Usable Privacy\", \"url\": \"https://adfree.usableprivacy.net/query\"}]");
defaultPref("network.trr.uri", ""); // clear default URL of DoH, prevent zuckestions to using `CrapFlare` by default!
defaultPref("permissions.default.camera", 2);               // No good to ask permissions by default, I prefer blocked by default until
defaultPref("permissions.default.desktop-notification", 2); // you've manually allowed each in address bar, this ain't like Chrome that
defaultPref("permissions.default.geo", 2);                  // never be preconfigured until you've manually modified registry policy!
defaultPref("permissions.default.microphone", 2);           // 
defaultPref("permissions.default.shortcuts", 2);            // 
defaultPref("permissions.default.xr", 2);                   // ~ end of permissions default group  ~
defaultPref("privacy.resistFingerprinting", true); // break any sites that use canvas rendering, e.g. demoscene, web games (any `.io` games for example), etc.
defaultPref("privacy.trackingprotection.lower_network_priority", true); // lower priority instead of blocking them? (lowering chance to break sites, maybe.)
defaultPref("signon.autofillForms", false); // do not enable autofill forms by default!
defaultPref("signon.rememberSignons", false); // disable password manager by default, I prefer external password manager, also don't even install password manager extensions!
defaultPref("toolkit.telemetry.server_owner", ""); // clear telemetry endpoint owner!
defaultPref("urlclassifier.features.cryptomining.annotate.whitelistTables", "unsupported");   // Do not enable whitelists for tracking protections for all!
defaultPref("urlclassifier.features.cryptomining.whitelistTables", "unsupported");            // I've set to `unsupported` to make sure that they will not
defaultPref("urlclassifier.features.fingerprinting.annotate.whitelistTables", "unsupported"); // load any valid whitelists, this will good for some case,
defaultPref("urlclassifier.features.fingerprinting.whitelistTables", "unsupported");          // such as Mozilla whitelist "YouTube" for allow ads bypassed
defaultPref("urlclassifier.features.socialtracking.annotate.whitelistTables", "unsupported"); // while many users want to block all of ads and tracking
defaultPref("urlclassifier.features.socialtracking.whitelistTables", "unsupported");          // from the beginning, of course, most of goolag trackers!!
defaultPref("urlclassifier.trackingAnnotationSkipURLs", ""); // {C-C-C-C-Combo Breaker!} Don't list annotation skip sites, the default value is allow Google reCaptcha to be run!
defaultPref("urlclassifier.trackingAnnotationWhitelistTable", "unsupported"); // {C-C-C-C-Combo Breaker!} This pref will load site lists that should exclude from TPL blocklist!
defaultPref("urlclassifier.trackingWhitelistTable", "unsupported");                           // ~ end of tpl whitelist defaultPref group ~
defaultPref("webchannel.allowObject.urlWhitelist", "");

// Clear and reset
// clearPref("");
// you may use `defaultPref("", );` along with...
clearPref("app.normandy.api_url");
clearPref("app.normandy.user_id");
clearPref("app.update.lastUpdateTime.addon-background-update-timer");  // Clear all of any update check values, e.g. app, thumbnails, extensions,
clearPref("app.update.lastUpdateTime.browser-cleanup-thumbnails");     // search engine, etc.
clearPref("app.update.lastUpdateTime.region-update-timer");            // This may force check update everything when you've re-launch browser
clearPref("app.update.lastUpdateTime.search-engine-update-timer");     // and causing trigger unnecessary network connections and pings...
clearPref("app.update.lastUpdateTime.services-settings-poll-changes"); //
clearPref("app.update.lastUpdateTime.xpi-signature-verification");     // ~ end of lastUpdateTime clearPref group ~
clearPref("breakpad.reportURL"); // clear crash status upload endpoint
clearPref("browser.aboutHomeSnippets.updateUrl"); // clear NTP snippets URL
clearPref("browser.contentblocking.report.vpn_platforms");
clearPref("browser.contentblocking.report.vpn_regions");
clearPref("browser.contentblocking.report.vpn_sub_id");
clearPref("browser.newtabpage.activity-stream.asrouter.providers.snippets");
clearPref("browser.newtabpage.activity-stream.default.sites"); // clear default URL of snippets endpoint!
clearPref("browser.newtabpage.activity-stream.discoverystream.region-spocs-config");
clearPref("browser.newtabpage.activity-stream.discoverystream.region-stories-config");
clearPref("browser.newtabpage.activity-stream.impressionId"); // reset and regenerate NTP impression ID
clearPref("browser.newtabpage.activity-stream.improvesearch.topSiteSearchShortcuts.havePinned"); // reset all pinned search
clearPref("browser.newtabpage.activity-stream.improvesearch.topSiteSearchShortcuts.searchEngines"); // reset topsite improved search engine
clearPref("browser.pageActions.persistedActions"); // remove all prefered page actions by default
clearPref("browser.region.network.url");
clearPref("browser.region.update.first-seen");
clearPref("browser.region.update.region");
clearPref("browser.region.update.updated");
clearPref("browser.safebrowsing.provider.mozilla.lastupdatetime"); // Clear update time of mozilla safebrowsing blockilist
clearPref("browser.safebrowsing.provider.mozilla.nextupdatetime"); // Clear next update time of mozilla safebrowsing blockilist
clearPref("browser.search.update.interval"); // clear default interval of search engine update, do not update every 6hrs!
clearPref("extensions.formautofill.supportedCountries"); // Clear supported countries for autofill!
clearPref("extensions.pocket.oAuthConsumerKey"); // remove ~~Pocket~~ api key!
clearPref("extensions.ui.lastCategory");
clearPref("extensions.webextensions.restrictedDomains"); // https://github.com/gorhill/uBlock/wiki/Privileged-Pages
clearPref("geo.wifi.uri"); // clear geo url, if it was any.
clearPref("media.gmp-manager.buildID");   // reset OpenH264 buildID
clearPref("media.gmp-manager.lastCheck"); // reset OpenH264 last update check
clearPref("media.gmp-manager.url"); // reset widevine downloader URLs to blank
clearPref("network.trr.resolvers"); // always reset to my customised DoH drop-down lists rather than "CrapFlare" and "NextDNS" (see `doh-resolver-lists.js`)
clearPref("toolkit.telemetry.cachedClientID"); // delete and regenerate telemetry ID everytime after browser startup
clearPref("urlclassifier.features.cryptomining.annotate.whitelistTables");   // please look to `urlclassifier.*.whitelistTables` default group...
clearPref("urlclassifier.features.cryptomining.whitelistTables");            //
clearPref("urlclassifier.features.fingerprinting.annotate.whitelistTables"); //
clearPref("urlclassifier.features.fingerprinting.whitelistTables");          //
clearPref("urlclassifier.features.socialtracking.annotate.whitelistTables"); //
clearPref("urlclassifier.features.socialtracking.whitelistTables");          //
clearPref("urlclassifier.trackingAnnotationSkipURLs");                       //
clearPref("urlclassifier.trackingAnnotationWhitelistTable");                 //
clearPref("urlclassifier.trackingWhitelistTable");                           // ~ end of tpl whitelist clearPref group ~
clearPref("webchannel.allowObject.urlWhitelist");

// "always set" section (unused yet)
// pref("", );
pref("browser.backspace_action", 0); // return to classics by pressing backspace = back one page, most browsers they've changed to alt+left and alt+right for go back and forward nowadays!
pref("browser.search.update", false); // always turn off search engine update

// Permanent lock (some prefs are copied from librewolf)
// lockPref("", );
lockPref("app.normandy.enabled", false);   // block normandy
lockPref("app.normandy.first_run", false); // this time block at first usage
lockPref("app.shield.optoutstudies.enabled", false); // disable shield studies app
lockPref("beacon.enabled", false); // in Chrome, they called "devices uses" (formerly "user presence")
lockPref("browser.bookmarks.restore_default_bookmarks", false); // prevent them inject default bookmarks?
lockPref("browser.contentblocking.report.hide_vpn_banner", true); // hide VPN promo in blocked trackers report dashboard
lockPref("browser.contentblocking.report.lockwise.enabled", false); // RIP Lockwise, 2020-2021...
lockPref("browser.contentblocking.report.monitor.enabled", false); // disable monitor report promo
lockPref("browser.contentblocking.report.show_mobile_app", false); // disable mobile app report promo
lockPref("browser.contentblocking.report.vpn.enabled", false); // disable VPN report promo
lockPref("browser.discovery.containers.enabled", false); // disable container discovery, manual add container still possible!
lockPref("browser.discovery.enabled", false); // disable browser discovery
lockPref("browser.discovery.sites", ""); // remove browser discovery site lists
lockPref("browser.helperApps.deleteTempFileOnExit", true); // always delete temp files of help (howto/manuals)
lockPref("browser.library.activity-stream.enabled", false); // disable active stream in library pane
lockPref("browser.messaging-system.whatsNewPanel.enabled", false); // disable what's new messaging panel
lockPref("browser.newtab.preload", false); // NTP should never preload anything!
lockPref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons", false);   // permanently disable recommend any addons based on your browsing!
lockPref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.features", false); // permanently disable recommend any fearures based on your browsing!
lockPref("browser.newtabpage.activity-stream.default.sites", "");
lockPref("browser.newtabpage.activity-stream.discoverystream.enabled", false);
lockPref("browser.newtabpage.activity-stream.feeds.discoverystreamfeed", false);
lockPref("browser.newtabpage.activity-stream.feeds.section.topstories.options", "{\"hidden\":true}"); // hide buggy pocket section from about:preferences#home
lockPref("browser.newtabpage.activity-stream.feeds.section.topstories", false);
lockPref("browser.newtabpage.activity-stream.feeds.snippets", false);
lockPref("browser.newtabpage.activity-stream.feeds.system.topstories", false);
lockPref("browser.newtabpage.activity-stream.feeds.telemetry", false);
lockPref("browser.newtabpage.activity-stream.feeds.topsites", false); // prohibit top sites news feed (this is how I hate `Chrome for Android`, why did they have this things!?)
lockPref("browser.newtabpage.activity-stream.sectionOrder", "topsites"); // always order only `topsites` and nothing else!
lockPref("browser.newtabpage.activity-stream.showSponsored", false);          // FUCK!
lockPref("browser.newtabpage.activity-stream.showSponsoredTopSites", false);  // FUCK!!
lockPref("browser.newtabpage.activity-stream.telemetry", false);
lockPref("browser.newtabpage.enhanced", false); // do not allow enhanced NTP!
lockPref("browser.search.geoSpecificDefaults", false); // do not detect region for preload default search
lockPref("browser.send_pings", false); // lock and disable browser pinging
lockPref("browser.uitour.enabled", false); // permanently disable UI tour
lockPref("browser.uitour.url", ""); // remove UI tour endpoint
lockPref("browser.urlbar.groupLabels.enabled", false); // BurntFox still release features that not respect user privacy! (93+)
lockPref("browser.urlbar.merino.enabled", false); // Disable QuickZuckest features
lockPref("browser.urlbar.quicksuggest.enabled", false); // main switch to turn off QuickZuckest
lockPref("browser.urlbar.quicksuggest.remoteSettings.enabled", false); // don't retrieve remote settings for QuickZuckest
lockPref("browser.urlbar.quicksuggest.sponsoredIndex", -2147483648); // PUSH SPONSORED QUICKZUCKEST INDEX TO HELL!!
lockPref("browser.urlbar.sponsoredTopSites", false); // FUCK THIS ONE, TOO!!!
lockPref("browser.urlbar.suggest.quicksuggest.sponsored", false); // turn off ads from QuickZuckest
lockPref("browser.urlbar.suggest.quicksuggest", false); // turn off QuickZuckest
lockPref("captivedetect.canonicalURL", ""); // remove captive portal url endpoint
lockPref("datareporting.healthreport.service.enabled", false); // do not allow BHR service
lockPref("datareporting.healthreport.uploadEnabled", false); // don't send browser health report (BHR)
lockPref("datareporting.policy.dataSubmissionEnabled", false); // disable data submission reporting
lockPref("default-browser-agent.enabled", false); // disable default browser agent (platform trackable telemetry)
lockPref("device.sensors.enabled", false); // we're on the pc, even somebody use laptop, why it's need to let any sites access sensor?
lockPref("dom.allow_scripts_to_close_windows", false); // do not allow web functions / scripts close your tab/window
lockPref("dom.battery.enabled", false); // useless for static pc, even laptop also, why website wants to know your battery time?
lockPref("dom.enable_resource_timing", false); // Resource timing (very old prefs still exist)
lockPref("dom.ipc.plugins.flash.subprocess.crashreporter.enabled", false); // Disable flash subprocess crash reporter (Major browsers stoped support adobe flash)
lockPref("dom.ipc.plugins.reportCrashURL", false); // Don't report crash with URL
lockPref("dom.telephony.enabled", false); // probably disable click to call (telephone number, send SMS/MMS, WAP push)
lockPref("dom.vibrator.enabled", false); // static PC cannot vibrate, did your browser also work as sex toys?
lockPref("experiments.enabled", false); // do not enable experiments
lockPref("experiments.supported", false); // do not support experiments
lockPref("extensions.formautofill.addresses.capture.enabled", false); // Don't capture filled address to autofill!
lockPref("extensions.formautofill.addresses.enabled", false);         // Don't enable address autofill!
lockPref("extensions.formautofill.available", "off");                 // Disable autofill extension!
lockPref("extensions.formautofill.creditCards.available", false);     // SAVE CREDIT CARDS IN BROWSER IS SUCKS!
lockPref("extensions.formautofill.creditCards.enabled", false);       // Main switch of above.
lockPref("extensions.getAddons.cache.enabled", false); // do not cache addons zuckestions in `about:addons` page
lockPref("extensions.htmlaboutaddons.recommendations.enabled", false); // do not load add-ons recommendations page inside `about:addons`
lockPref("extensions.pocket.enabled", false); // any snippets related features that load from the first time or everytime of open browsers aren't welcome!
lockPref("extensions.shield-recipe-client.enabled", false); // disable "Shield" recipes
lockPref("geo.enabled", false); // no actual locations resolving!
lockPref("marionette.prefs.recommended", false); // permanet lock prefs against QuickZuckest
lockPref("media.gmp-gmpopenh264.autoupdate", false); // disable Cisco OpenH264 (1. don't auto update
lockPref("media.gmp-gmpopenh264.enabled", false);    //                        (2. don't enable it
lockPref("media.gmp-gmpopenh264.visible", false);    //                        (3. don't show in extension lists
lockPref("network.captive-portal-service.enabled", false); // permanently prevent captive portal
lockPref("network.connectivity-service.enabled", false); // permanently prevent connectivity check service
lockPref("network.dns.disablePrefetch", true); // No and never enable DNS prefetch!
lockPref("privacy.resistFingerprinting.block_mozAddonManager", true); // https://github.com/gorhill/uBlock/wiki/Privileged-Pages
lockPref("privacy.resistFingerprinting", true); // always resist fingerprinting
lockPref("security.ssl.errorReporting.enabled", false); // do not report SSL error to Mozilla
lockPref("toolkit.coverage.opt-out", true); // hidden prefs to opt out telemetry coverage
lockPref("toolkit.telemetry.bhrPing.enabled", false); // Permanently prohibit browser health report ping!
lockPref("toolkit.telemetry.coverage.opt-out", true); // hidden prefs to opt out telemetry coverage
lockPref("toolkit.telemetry.enabled", false); // Main switch to blocking telemetry
lockPref("toolkit.telemetry.firstShutdownPing.enabled", false); // don't ping telemetry for first shutdown!
lockPref("toolkit.telemetry.newProfilePing.enabled", false); // don't ping telemetry for new profile!
lockPref("toolkit.telemetry.reportingpolicy.firstRun", false); // permanent lock for disable telemetry report, even first run!
lockPref("toolkit.telemetry.server", ""); // Remove telemetry server URL
lockPref("toolkit.telemetry.shutdownPingSender.enabled", false); // don't ping for any shutdown!!
lockPref("toolkit.telemetry.unified", false); // Telemetry data isn't unified!
lockPref("toolkit.telemetry.updatePing.enabled", false); // don't ping update telemetry!

// Security
defaultPref("security.tls.version.fallback-limit", 4); // Set TLS 1.3 as maximum fallback
defaultPref("security.tls.version.max", 4); // Set TLS 1.3 as maximum encrypted protocol
defaultPref("security.tls.version.min", 3); // Set TLS 1.2 as minimum encrypted protocol

// UTM BULLSHIT!
// I'm not surprise that why `Firefox` re-partner with `Google`
clearPref("browser.contentblocking.report.mobile-android.url");
clearPref("browser.contentblocking.report.monitor.sign_in_url");
clearPref("browser.contentblocking.report.monitor.url");
clearPref("browser.contentblocking.report.proxy_extension.url");
clearPref("browser.contentblocking.report.vpn-android.url");
clearPref("browser.contentblocking.report.vpn-promo.url");
clearPref("browser.contentblocking.report.vpn.url");
clearPref("browser.privatebrowsing.vpnpromourl");
clearPref("extensions.recommendations.privacyPolicyUrl");
clearPref("extensions.recommendations.themeRecommendationUrl");
clearPref("identity.mobilepromo.android");
clearPref("identity.mobilepromo.ios");
defaultPref("browser.contentblocking.report.mobile-android.url", "https://play.google.com/store/apps/details?id=org.mozilla.firefox");
defaultPref("browser.contentblocking.report.monitor.sign_in_url", "https://monitor.firefox.com/oauth/init");
defaultPref("browser.contentblocking.report.monitor.url", "https://monitor.firefox.com");
defaultPref("browser.contentblocking.report.proxy_extension.url", "https://fpn.firefox.com/browser");
defaultPref("browser.contentblocking.report.vpn-android.url", "https://play.google.com/store/apps/details?id=org.mozilla.firefox.vpn");
defaultPref("browser.contentblocking.report.vpn-promo.url", "https://vpn.mozilla.org");
defaultPref("browser.contentblocking.report.vpn.url", "https://vpn.mozilla.org");
defaultPref("browser.privatebrowsing.vpnpromourl", "https://vpn.mozilla.org");
defaultPref("extensions.recommendations.privacyPolicyUrl", "https://www.mozilla.org/privacy/firefox#addons");
defaultPref("extensions.recommendations.themeRecommendationUrl", "https://color.firefox.com");
defaultPref("identity.mobilepromo.android", "https://www.mozilla.org/firefox/android");
defaultPref("identity.mobilepromo.ios", "https://www.mozilla.org/firefox/ios");
